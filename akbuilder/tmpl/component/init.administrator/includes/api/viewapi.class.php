<?php
/**
 * @package     Joomla.Administrator
 * @subpackage  com_{COMPONENT_NAME}
 *
 * @copyright   Copyright (C) 2012 Asikart. All rights reserved.
 * @license     GNU General Public License version 2 or later; see LICENSE.txt
 * @author      Generated by AKHelper - http://asikart.com
 */

// no direct access
defined('_JEXEC') or die;

jimport('joomla.application.component.view');

class AKViewApi extends JViewLegacy
{

    public $_buffer ;

    /**
     * Display the view
     */
    public function display($tpl = null)
    {
        $doc    = JFactory::getDocument();
        $class  = JRequest::getVar('class') ;
        $method = JRequest::getVar('method');
        
        
        if( !$class ){
            ApiError::raiseError(404, 'Class not found.') ;
        }
        
        
        
        // Session
        // =================================================================
        //$this->handleSession() ;
        
        
        
        // Excute method
        // =================================================================
        $ctrl  = JControllerLegacy::getInstance('{COMPONENT_NAME_UCFIRST}');
        $model = $ctrl->getModel($class) ;
        
        if( !$model ) {
            ApiError::raiseError(404, "Class: {$class} not exists.");
            return false;
        }
        
        if( !is_callable( array($model, $method) ) ) {
            ApiError::raiseError(404, "Method: {$class}::{$method} not exists.");
            return false;
        }
        
        if(!$method){
            $method = $model->get('default_method', 'getItems') ;
        }
        
        $data     = $model->$method() ;
        
        
        
        // Check for errors.
        // =================================================================
        if (count($errors = $this->get('Errors'))) {
            ApiError::raiseError(500, implode("\n", $errors));
            return false;
        }
        
        
        
        // render Result
        // =================================================================
        $result = new JObject();
        $result->set( 'ApiResult', $data ) ;
        
        if(JDEBUG){
            $result->set( 'debug' , ApiError::$debug ) ;
        }
        
        echo $json =  json_encode($result);
        return true ;
    }
    
    
    /*
     * function setBuffer
     * @param $data
     */
    public function setBuffer($data)
    {
        $this->_buffer = $data ;
    }
    
    
    /*
     * function getBuffer
     * @param 
     */
    
    public function getBuffer()
    {
        return $this->_buffer ;
    }
    
    
    /*
     * function handleSession
     * @param 
     */
    
    public function handleSession()
    {
        $class = JRequest::getVar('class') ;
        
        // get session key and detete user
        // =================================================================
        $s      = JFactory::getSession();
        
        $key    =  JRequest::getVar('session_key') ;
        $db     = JFactory::getDbo();
        $q      = $db->getQuery(true);
        $q->select('userid')
            ->from('#__session')
            ->where("session_id='{$key}'")
            ;
            
        $db->setQuery($q,0,1);
        $uid = $db->loadResult();
        
        
        
        // if user has loged in, set it in session.
        // =================================================================
        if( $uid ){
            $user = JFactory::getUser($uid);
            $s->set('user',$user);
        }
        
        
        
        // Detect is login?
        // =================================================================
        $user = JFactory::getUser();
        if ( $user->guest && $class != 'user' ) {
            ApiError::raiseError(403, JText::_('JERROR_ALERTNOAUTHOR'));
        }
    }
    
    public function setLog() {
		$db = JFactory::getDbo();
		$q = $db->getQuery(true) ;
		$uri = JFactory::getURI();
		
		// delete old
		$date = JFactory::getDate( 'now' , JFactory::getConfig()->get('offset') ) ;
		$date = $date->toUnix(true);
		$date = $date - ( 60 * 60 * 24 * 3 ) ;
		$date = JFactory::getDate( $date )->toSQL(true) ;
		
		$q->delete('#__{COMPONENT_NAME}_request_logs')
			->where(" created <  '{$date}'")
			;
		$db->setQuery($q);
		$db->query();
		
		
		// insert new
		$i = new JObject();
		$i->created = JFactory::getDate( JFactory::getConfig()->get('offset') )->toMySQL();
		$i->uri = $uri->getPath();
		$i->request = json_encode(array_merge( JRequest::get('get') , JRequest::get('post') ) );
		
		$db->insertObject( '#__{COMPONENT_NAME}_request_logs' , $i );
	}
}