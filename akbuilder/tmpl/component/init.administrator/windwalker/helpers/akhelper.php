<?php
/**
 * @package     Windwalker.Framework
 * @subpackage  AKHelper
 *
 * @copyright   Copyright (C) 2012 Asikart. All rights reserved.
 * @license     GNU General Public License version 2 or later; see LICENSE.txt
 * @author      Generated by AKHelper - http://asikart.com
 */

// no direct access
defined('_JEXEC') or die;

class AKHelper extends AKProxy
{
	static $config = array();
	
	static $version ;
	
	/**
	 * Gets a list of the actions that can be performed.
	 *
	 * @return	JObject
	 * @since	1.6
	 */
	public static function getActions($option)
	{
		$user	= JFactory::getUser();
		$result	= new JObject;

		$assetName = $option;

		$actions = array(
			'core.admin', 
			'core.manage', 
			'core.create', 
			'core.edit', 
			'core.edit.own', 
			'core.edit.state', 
			'core.delete'
		);

		foreach ($actions as $action) {
			$result->set($action,	$user->authorise($action, $assetName));
		}

		return $result;
	}
	
	
	
	/*
	 * function show
	 * @param $data
	 */
	
	public static function show($data)
	{
		echo '<pre>'.print_r($data, 1).'</pre>' ;
	}
	
	
	/*
	 * function isHome
	 * @param 
	 */
	
	public static function isHome() {
		$juri = JFactory::getURI();
		$current_url = $juri->toString();
		
		if( $juri->base()==$current_url || $juri->base().'index.php' == $current_url ) 
			return true;
		else 
			return false;
	}
	
	
	/*
	 * function getParams
	 * @param $option
	 */
	
	public static function getParams($option = null)
	{
		if(!$option) {
			$option = AKHelper::_('path.getOption') ;
		}
		
		if($option) {
			return JComponentHelper::getParams($option);
		}
	}
	
	
	/*
	 * function getConfig
	 * @param $key
	 */
	
	public static function getConfig($key, $default = null, $option = null)
	{
		if(!$option){
			$option = AKHelper::_('path.getOption') ;
		}
		
		if(isset(self::$config[$option])) {
			return self::$config[$option]->get($key, $default) ;
		}
		
		// Init Config
		self::$config[$option] = new JRegistry();
		self::$config[$option]->loadFile( AKHelper::_('path.getAdmin', $option).'/includes/config.json' );
		
		return self::$config[$option]->get($key, $default) ;
	}
	
	
	/*
	 * function getVersion
	 * @param 
	 */
	
	public static function getVersion()
	{
		if(self::$version) {
			return self::$version ;
		}
		
		$xml = AKHelper::_('path.getAdmin').'/'.substr(AKHelper::_('path.getOption'), 4).'.xml' ;
		$xml = JFactory::getXML($xml, true) ;
		
		return self::$version = $xml->version ;
	}
}


if(!class_exists('AK')){
	class AK extends AKHelper {}
}