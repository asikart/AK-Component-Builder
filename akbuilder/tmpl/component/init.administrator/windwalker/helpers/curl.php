<?php
/**
 * @package     Windwalker.Framework
 * @subpackage  AKHelper
 *
 * @copyright   Copyright (C) 2012 Asikart. All rights reserved.
 * @license     GNU General Public License version 2 or later; see LICENSE.txt
 * @author      Generated by AKHelper - http://asikart.com
 */


// No direct access
defined('_JEXEC') or die;


class AKHelperCurl
{
	public static $errors = array();
	
	/*
	 * function getPageHTML
	 * @param $url
	 */
	
	public static function getPage($url='', $method = 'get', $query = '')
	{
		if(!$url) return ;
		
		if( (!function_exists('curl_init') || !is_callable('curl_init') ) && ini_get('allow_url_fopen')) {
			return file_get_contents($url) ;
		}	
		
		
		$ch = curl_init();
		 
		
		$options = array(
			CURLOPT_URL 			=> AKHelper::_('uri.safe' ,$url),
			CURLOPT_RETURNTRANSFER 	=> true,
			CURLOPT_USERAGENT 		=> "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/14.0.835.163 Safari/535.1",
			CURLOPT_FOLLOWLOCATION 	=> true ,
		);
		
		if($method == 'post') {
			$options[CURLOPT_POST] = true ;
			if(is_array($query)) {
				$query = http_build_query($query) ;
			}
			$options[CURLOPT_POSTFIELDS] = $query ;
		}
		

		curl_setopt_array($ch, $options);
		$output = curl_exec($ch);
		
		$errno 	= curl_errno($ch);
		$errmsg = curl_error($ch);
		
		curl_close($ch);
		
		if($output){
			return $output ;
		}elseif($errno) {
			self::$errors[] = $errno . ' - ' . $errmsg  ;
			return false ;
		}else{
			return false ;
		}
	}
	
	public static function getFile($url=null, $path=null)
	{
		if(!$url) return ;
		
		jimport('joomla.filesystem.file');
		jimport('joomla.filesystem.folder');
		jimport('joomla.filesystem.path');
		
		$url = JFactory::getURI($url) ;
		
		//$folder_path = JPATH_ROOT.DS.'files'.DS.$url->task_id ;
		if(substr($path, -1) == DIRECTORY_SEPARATOR){
			$file_name 		= JFile::getName($url);
			$file_path 		= $path.$file_name ;
			$folder_path 	= $path ;
		}else{
			$file_path 		= $path ;
			$folder_path 	= str_replace( JFile::getName($path), '', $file_path );
		}
		
		JPath::setPermissions($folder_path, 644, 755) ;
		if( !JFolder::exists($folder_path) ){
			JFolder::create($folder_path) ;
		}
		
		$fp = fopen( $file_path, 'w+' ) ;
		$ch = curl_init(  );
		
		$options = array(
			CURLOPT_URL 			=> AKHelper::_('uri.safe' ,$url),
			CURLOPT_RETURNTRANSFER 	=> true,
			CURLOPT_USERAGENT 		=> "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/14.0.835.163 Safari/535.1",
			CURLOPT_FOLLOWLOCATION 	=> true ,
			CURLOPT_FILE			=> $fp ,
		);
		
		curl_setopt_array($ch, $options);
		curl_exec($ch);
		
		$errno = curl_errno($ch);
		$errmsg = curl_error($ch);
		
		curl_close($ch);
		fclose($fp);
		
		if( $errno ) {
			self::$errors[] = $errno . ' - ' . $errmsg  ;
			return false ;
		}else{
			return true ;
		}
		
	}
	
	
	/*
	 * function getError
	 * @param 
	 */
	
	public static function getError($i = null)
	{
		if( $i ) {
			return JArrayHelper::getValue(self::$errors, $i) ;
		}else{
			return end(self::$errors) ;
		}
	}
	
	
	/*
	 * function getErrors
	 * @param 
	 */
	
	public static function getErrors()
	{
		return self::$errors ;
	}
}