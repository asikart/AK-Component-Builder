<?php
/**
 * @package     Windwalker.Framework
 * @subpackage  Form
 *
 * @copyright   Copyright (C) 2012 Asikart. All rights reserved.
 * @license     GNU General Public License version 2 or later; see LICENSE.txt
 * @author      Generated by AKHelper - http://asikart.com
 */

// no direct access
defined('_JEXEC') or die;

jimport('joomla.html.html');
JFormHelper::loadFieldClass('text');

/**
 * Supports a File finder to pick files.
 *
 * @package     Windwalker.Framework
 * @subpackage  Form
 */
class JFormFieldFinder extends JFormFieldText
{
    protected $showAsTooltip = false ;
    
    /**
     * The initialised state of the document object.
     *
     * @var    boolean 
     */
    protected static $initialised = false;
    
    /**
     * Method to get the field input markup.
     *
     * @return    string    The field input markup.
     */
    public function getInput()
    {
        // Load the modal behavior script.
        JHtml::_('behavior.modal', 'a.modal');
        
        if (!self::$initialised){
            $this->setScript();
        }

        // Setup variables for display.
        $html    = array();
        $link    = $this->getLink();
        $title   = $this->getTitle();
        

        if (empty($title)) {
            $title = $this->element['select_label']
                        ? (string) JText::_($this->element['select_label'])
                        : JText::_('LIB_WINDWALKER_FORMFIELD_FINDER_SELECT_FILE');
        }
        
        $title = htmlspecialchars($title, ENT_QUOTES, 'UTF-8');
        
        // The text field.
        $preview = $this->getPreview();
        
        if( JVERSION >=3 ){
            // The current user display field.
            $html[] = '<span class="input-append">';
            $html[] = '<input type="text" class="input-medium" id="'.$this->id.'_name" value="'.$title.'" disabled="disabled" size="35" />
                        <a class="modal btn btn-primary" title="'.JText::_('LIB_WINDWALKER_FORMFIELD_FINDER_BROWSE_FILES').'"  href="'.$link.'&amp;'.JSession::getFormToken().'=1" rel="{handler: \'iframe\', size: {x: 800, y: 450}}">
                            <i class="icon-picture"></i> '.JText::_('LIB_WINDWALKER_FORMFIELD_FINDER_BROWSE_FILES')
                        .'</a>';
            $html[] = '</span>';
        }else{
            AKHelper::_('include.addCSS', 'buttons/delicious-buttons/delicious-buttons.css', 'ww');
            
            // The current user display field.
            $html[] = '<div class="fltlft">';
            $html[] = '  <input type="text" id="'.$this->id.'_name" value="'.$title.'" disabled="disabled" size="35" />';
            $html[] = '</div>';
    
            // The user select button.
            $html[] = '<div class="fltlft">';
            $html[] = '  <div class="">';
            $html[] = '    <a class="modal delicious light blue" title="'.JText::_('LIB_WINDWALKER_FORMFIELD_FINDER_BROWSE_FILES').'"  href="'.$link.'&amp;'.JSession::getFormToken().'=1" rel="{handler: \'iframe\', size: {x: 800, y: 450}}">'.JText::_('LIB_WINDWALKER_FORMFIELD_FINDER_BROWSE_FILES').'</a>';
            $html[] = '  </div>';
            $html[] = '</div>';
        }

        // class='required' for client side validation
        $class = '';
        if ($this->required) {
            $class = ' class="required modal-value"';
        }
        
        $html[] = '<input type="hidden" id="'.$this->id.'"'.$class.' name="'.$this->name.'" value="'.$this->value.'" />';
        
        $html = implode("\n", $html) ;
        
        
        if($this->showAsTooltip){
            $html = $preview . $html ;
            $html = '<div class="input-prepend input-append" style="margin-right: 7px;">'.$html.'</div>';
        }
        
        
        $clear_text = JVERSION < 3 ? JText::_('JLIB_FORM_BUTTON_CLEAR') : '';
        
        $html .= '<a class="btn btn-danger delicious light red fltlft hasTooltip" title="' . JText::_('JLIB_FORM_BUTTON_CLEAR') . '"' . ' href="#" onclick="';
        $html .= 'AKFinderClear_'.$this->id."('{$title}');";
        $html .= 'return false;';
        $html .= '">';
        $html .= '<i class="icon-remove"></i>'.$clear_text.'</a>';
        
        if(!$this->showAsTooltip){
            $html = $html . $preview;
        }
        
        return $html ;
    }
    
    /**
     * previewField
     */
    public function getPreview()
    {
        // The Preview.
        $preview = (string) $this->element['preview'];
        $showPreview = true;
        $showAsTooltip = false;
        switch ($preview)
        {
            case 'no': // Deprecated parameter value
            case 'false':
            case 'none':
                $showPreview = false;
                break;
 
            case 'yes': // Deprecated parameter value
            case 'true':
            case 'show':
                break;
 
            case 'tooltip':
            default:
                $this->showAsTooltip = $showAsTooltip = true;
                $options = array(
                    'onShow' => 'AKFinderRefreshPreviewTip',
                );
                JHtml::_('behavior.tooltip', '.hasTipPreview', $options);
                break;
        }
 
        if ($showPreview)
        {
            if ($this->value && file_exists(JPATH_ROOT . '/' . $this->value))
            {
                $src = JURI::root() . $this->value;
            }
            else
            {
                $src = '';
            }
 
            $width = isset($this->element['preview_width']) ? (int) $this->element['preview_width'] : 300;
            $height = isset($this->element['preview_height']) ? (int) $this->element['preview_height'] : 200;
            $style = '';
            $style .= ($width > 0) ? 'max-width:' . $width . 'px;' : '';
            $style .= ($height > 0) ? 'max-height:' . $height . 'px;' : '';
            $style .= !$showAsTooltip ? 'margin: 10px 0;' : '';
            
            $imgattr = array(
                'id' => $this->id . '_preview',
                'class' => 'media-preview',
                'style' => $style,
            );
            
            $imgattr['class'] = $showAsTooltip ? $imgattr['class'] : $imgattr['class'].' img-polaroid' ;
            
            $img = JHtml::image($src, JText::_('JLIB_FORM_MEDIA_PREVIEW_ALT'), $imgattr);
            $previewImg = '<div id="' . $this->id . '_preview_img"' . ($src ? '' : ' style="display:none"') . '>' . $img . '</div>';
            $previewImgEmpty = '<div id="' . $this->id . '_preview_empty"' . ($src ? ' style="display:none"' : '') . '>'
                . JText::_('JLIB_FORM_MEDIA_PREVIEW_EMPTY') . '</div>';
 
            $html[] = '<div class="media-preview add-on fltlft">';
            if ($showAsTooltip)
            {
                $tooltip = $previewImgEmpty . $previewImg;
                $options = array(
                    'title' => JText::_('JLIB_FORM_MEDIA_PREVIEW_SELECTED_IMAGE'),
                    'text' => '<i class="icon-eye"></i>',
                    'class' => 'hasTipPreview'
                );
                
                $options['text'] = JVERSION >= 3 ? $options['text'] : JText::_('JLIB_FORM_MEDIA_PREVIEW_TIP_TITLE');
                $html[] = JHtml::tooltip($tooltip, $options);
            }
            else
            {
                $html[] = ' ' . $previewImgEmpty;
                $html[] = ' ' . $previewImg;
            }
            $html[] = '</div>';
        }
        
        return implode("\n", $html );
    }
    
    /**
     * setScript
     */
    public function setScript()
    {
        // Build Select script.
        $script = array();
        $script[] = <<<SCRIPT
        var AKFinderSelect_{$this->id} = function(selected, elFinder){
            if(selected.length < 1) return ;
            var link    = elFinder.path(selected[0].hash) ;
            var name    = selected[0].name ;
            
            // Clean DS
            link = link.replace(/\\\\/g, '/');
            
            document.id("{$this->id}").value = link;
            document.id("{$this->id}_name").value = name;
            
            AKFinderRefreshPreview('{$this->id}');
            SqueezeBox.close();
        }
        
        var AKFinderClear_{$this->id} = function(title){
            document.id("{$this->id}").value = '';
            document.id("{$this->id}_name").value = title;
            
            AKFinderRefreshPreview('{$this->id}');
        };
SCRIPT;

        $script[] = '    function AKFinderRefreshPreview(id) {';
        $script[] = '        var value = document.id(id).value;';
        $script[] = '        var img = document.id(id + "_preview");';
        $script[] = '        if (img) {';
        $script[] = '            if (value) {';
        $script[] = '                img.src = "' . JURI::root() . '" + value;';
        $script[] = '                document.id(id + "_preview_empty").setStyle("display", "none");';
        $script[] = '                document.id(id + "_preview_img").setStyle("display", "");';
        $script[] = '            } else { ';
        $script[] = '                img.src = ""';
        $script[] = '                document.id(id + "_preview_empty").setStyle("display", "");';
        $script[] = '                document.id(id + "_preview_img").setStyle("display", "none");';
        $script[] = '            } ';
        $script[] = '        } ';
        $script[] = '    }';

        $script[] = '    function AKFinderRefreshPreviewTip(tip)';
        $script[] = '    {';
        $script[] = '        var img = tip.getElement("img.media-preview");';
        $script[] = '        tip.getElement("div.tip").setStyle("max-width", "none");';
        $script[] = '        var id = img.getProperty("id");';
        $script[] = '        id = id.substring(0, id.length - "_preview".length);';
        $script[] = '        AKFinderRefreshPreview(id);';
        $script[] = '        tip.setStyle("display", "block");';
        $script[] = '    }';


        // Add the script to the document head.
        JFactory::getDocument()->addScriptDeclaration(implode("\n", $script));
    }
    
    /**
     * Get item title.
     */
    public function getTitle()
    {
        $path = $this->value ;
        
        if(!$path) return null ;
        
        $path = JPath::clean($path, '/');
        $path = explode('/', $path);
        
        $file_name = array_pop($path);
        
        return $file_name ;
    }
    
    /**
     * Get item link.
     */
    public function getLink()
    {
        $extension = $this->element['extension'] ? (string) $this->element['extension'] : JRequest::getVar('option') ;
        
        $root = $this->element['root'] ? (string) $this->element['root'] : '/' ;
        $start_path = $this->element['start_path'] ? (string) $this->element['start_path'] : '/' ;
        
        $link = "index.php?option={$extension}&task=elfinderDisplay&tmpl=component&finder_id={$this->id}&root={$root}&start_path={$start_path}" ;
        
        return $link ;
    }
}