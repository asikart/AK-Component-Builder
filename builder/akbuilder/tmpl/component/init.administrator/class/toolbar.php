<?php
/**
 * @package     Windwalker.Framework
 * @subpackage  class
 *
 * @copyright   Copyright (C) 2012 Asikart. All rights reserved.
 * @license     GNU General Public License version 2 or later; see LICENSE.txt
 * @author      Generated by AKHelper - http://asikart.com
 */

// no direct access
defined('_JEXEC') or die;


include_once JPATH_ADMINISTRATOR.'/includes/toolbar.php' ;

class AKToolBarHelper extends JToolBarHelper
{
	static function title ($title, $icon = 'generic.png')
	{
		$doc = JFactory::getDocument();
		$app = JFactory::getApplication();
		
		$doc->setTitle($title) ;
		
		$view 	= JRequest::getVar('view') ;
		$layout = JRequest::getVar('layout', 'default') ;
		$option = JRequest::getVar('option') ;
		
		// Strip the extension.
		$icons = explode(' ', $icon);
		foreach($icons as &$icon) {
			$icon = 'icon-48-'.preg_replace('#\.[^.]*$#', '', $icon);
		}
		
		$class 	= "header-{$view}-{$layout}" ;
		$img	= "components/{$option}/images/admin-icons/{$class}.png" ;
		
		if(JFile::exists(JPATH_ADMINISTRATOR.'/'.$img)) {
			$icon = $class ;
		}
		
		if(JVERSION >= 3) $icon = null ;
		
		$admin	= $app->isSite() ? JURI::root().'administrator/' : '' ;
		$img	= $admin."components/{$option}/images/admin-icons/{$class}.png" ;
		
		$doc->addStyleDeclaration("
.{$class} {
	background: url({$img}) no-repeat;
}
		");
		
		$html = '<div class="pagetitle '.htmlspecialchars($icon).'"><h2>'.$title.'</h2></div>';		
		//$html = $title ;
		
		$app->JComponentTitle = $html ;
		
	}
	
	
	/*
	 * function link
	 * @param 
	 */
	
	public static function link($alt , $href = '#', $icon = 'asterisk')
	{
		$bar = JToolbar::getInstance('toolbar');
 
        // Add a back button.
        $bar->appendButton('Link', $icon, $alt, $href);
	}
	
	
	/*
	 * function back
	 * @param 
	 */
	
	public static function back($alt = 'JTOOLBAR_BACK', $href = 'javascript:history.back();')
	{
		$bar = JToolbar::getInstance('toolbar');
 
        // Add a back button.
        $bar->appendButton('Link', 'chevron-left', $alt, $href);
	}
	
	
	/*
	 * function modal
	 * @param 
	 */
	
	public static function modal($title  = 'JTOOLBAR_BATCH' , $selector = 'myModal' )
	{
		JHtml::_('bootstrap.modal', $selector);
		$bar 	= JToolbar::getInstance('toolbar');
		$title  = JText::_($title);
		$dhtml 	= "<button data-toggle=\"modal\" data-target=\"#$selector\" class=\"btn btn-small\">
					<i class=\"icon-checkbox-partial\" title=\"$title\"></i>
					$title</button>";
		$bar->appendButton('Custom', $dhtml, 'batch');	
	}
	
	
	/*
	 * function __callStatic
	 */
	
	public static function __callStatic($name, $args)
	{
		$app = JFactory::getApplication() ;
		
		$app->triggerEvent('onAKToolbarAppendButton', array($name, &$args) ) ;
		call_user_func_array( array('JToolBarHelper', $name), $args );
	}
}