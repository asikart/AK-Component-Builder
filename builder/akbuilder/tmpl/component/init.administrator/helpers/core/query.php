<?php
/**
 * @package     Joomla.Administrator
 * @subpackage  com_{COMPONENT_NAME}
 *
 * @copyright   Copyright (C) 2012 Asikart. All rights reserved.
 * @license     GNU General Public License version 2 or later; see LICENSE.txt
 * @author      Generated by AKHelper - http://asikart.com
 */

// no direct access
defined('_JEXEC') or die;


/**
 * {COMPONENT_NAME_UCFIRST} helper.
 */
class {COMPONENT_NAME_UCFIRST}HelperQuery
{
	public static function getSelectList( $tables = array() , $all = true )
	{
		$db = JFactory::getDbo();
		
		$select = array() ;
		$fields = array() ;
		$i = 'a' ;
		
		foreach( $tables as $k => $table ){
			
			$columns = $db->getTableColumns( $table );
			
			if($all){
				$select[] = "{$k}.*" ;
			}
			
			foreach( $columns as $key=>$var ){
				$fields[] = "{$k}.{$key} AS {$k}_{$key}" ;
			}
			
			$i = ord($i);
			$i ++ ;
			$i = chr($i) ;
		}
		
		return $final = implode( "," , $select ).",\n".implode( ",\n" , $fields );
	}
	
	public static function mergeFilterFields( $filter_fields , $tables = array() )
	{
		$db = JFactory::getDbo();
		$fields = array() ;
		$i = 'a' ;
		
		$ignore = array(
			'params'
		) ;
		
		foreach( $tables as $k => $table ){
			
			$columns = $db->getTableColumns( $table );
			
			foreach( $columns as $key=>$var ){
				if( in_array($key, $ignore) ){
					continue;
				}
				
				$fields[] = "{$k}.{$key}" ;
				$fields[] = $key ;
			}
			
			$i = ord($i);
			$i ++ ;
			$i = chr($i) ;
		}
		
		return array_merge( $filter_fields , $fields );
	}
	
	
	public static function publishingPeriod ( $prefix = '' ) {
		$db = JFactory::getDbo();
		$nowDate 	= $date = JFactory::getDate( 'now' , JFactory::getConfig()->get('offset') )->toSQL() ;
        $nullDate	= $db->getNullDate();
        
        $date_where = " ( {$prefix}publish_up < '{$nowDate}' OR  {$prefix}publish_up = '{$nullDate}') AND ".
        			  "( {$prefix}publish_down > '{$nowDate}' OR  {$prefix}publish_down = '{$nullDate}') " ;
        			  
        return $date_where ;
	}
	
	public static function publishingItems ( $prefix = '', $published_col = 'published' ) {
		return self::publishingPeriod($prefix)." AND {$prefix}{$published_col} >= '1' ";
	}
	
}
